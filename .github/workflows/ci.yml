name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
  workflow_dispatch:
    
concurrency:
  group: ci-${{github.workflow}}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate code coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
        
      - name: Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Tests
        run: npm test

      - name: Test coverage
        run: npm run test:coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 1

  docker-build:
    name: Docker build verification
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: interview-webapp:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar
          retention-days: 1

      - name: Test Docker image
        run: |
          docker load --input /tmp/image.tar
          docker run -d -p 3000:3000 --name test-container interview-webapp:${{ github.sha }}
          sleep 5
          
          response=$(curl -s http://localhost:3000/)
          if [ "$response" != "Hello World" ]; then
            echo "Root endpoint test failed. Expected 'Hello World', got: $response"
            exit 1
          fi
          echo "Root endpoint test passed"
          
          status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health)
          if [ "$status" != "200" ]; then
            echo "Health check failed with status: $status"
            exit 1
          fi
          echo "Health check test passed"
          
          docker stop test-container

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [validate, docker-build]
    if: always()

    steps:
      - name: Check CI status
        run: |
          if [ "${{ needs.validate.result }}" != "success" ] || [ "${{ needs.docker-build.result }}" != "success" ]; then
            echo "CI FAILED"
            echo ""
            echo "Validation: ${{ needs.validate.result }}"
            echo "Docker Build: ${{ needs.docker-build.result }}"
            echo ""
            echo "Please check the job logs above for details."
            exit 1
          else
            echo "All CI checks passed!"
            echo ""
            echo "TypeScript compilation successful"
            echo "All tests passed"
            echo "Docker image built and verified"
          fi